import{_ as a,o as t,c as e,U as l}from"./chunks/framework.2333ef68.js";const b=JSON.parse('{"title":"运算符","description":"","frontmatter":{},"headers":[],"relativePath":"JavaScript/03-运算符.md","filePath":"JavaScript/03-运算符.md"}'),o={name:"JavaScript/03-运算符.md"},s=l(`<h1 id="运算符" tabindex="-1">运算符 <a class="header-anchor" href="#运算符" aria-label="Permalink to &quot;运算符&quot;">​</a></h1><h2 id="_1-算术运算符" tabindex="-1">1.算术运算符 <a class="header-anchor" href="#_1-算术运算符" aria-label="Permalink to &quot;1.算术运算符&quot;">​</a></h2><table><thead><tr><th><strong>运算符</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>+</td><td>加、字符串连接</td></tr><tr><td>-</td><td>减</td></tr><tr><td>*</td><td>乘</td></tr><tr><td>/</td><td>除</td></tr><tr><td>%</td><td>获取余数（取余、取模）</td></tr></tbody></table><h2 id="_2-递增-和递减-运算符" tabindex="-1">2.递增++和递减--运算符 <a class="header-anchor" href="#_2-递增-和递减-运算符" aria-label="Permalink to &quot;2.递增++和递减--运算符&quot;">​</a></h2><h2 id="_3-比较运算符" tabindex="-1">3.比较运算符 <a class="header-anchor" href="#_3-比较运算符" aria-label="Permalink to &quot;3.比较运算符&quot;">​</a></h2><div class="language--"><button title="Copy Code" class="copy"></button><span class="lang">-</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">- &lt; 小于号</span></span>
<span class="line"><span style="color:#A6ACCD;">- &gt;=  大于或等于</span></span>
<span class="line"><span style="color:#A6ACCD;">- &lt;=  小于或等于</span></span>
<span class="line"><span style="color:#A6ACCD;">- ==  等于</span></span>
<span class="line"><span style="color:#A6ACCD;">- === 全等于</span></span>
<span class="line"><span style="color:#A6ACCD;">- != 不等于</span></span>
<span class="line"><span style="color:#A6ACCD;">- !== 不全等于</span></span></code></pre></div><h2 id="_4-逻辑运算符" tabindex="-1">4.逻辑运算符 <a class="header-anchor" href="#_4-逻辑运算符" aria-label="Permalink to &quot;4.逻辑运算符&quot;">​</a></h2><p>逻辑运算符有三个：</p><ul><li>&amp;&amp;： 与（且）。两个都为真，结果才为真。特点：一假则假。</li><li>|| ：或。只要有一个是真，结果就是真。特点：特点: 一真则真。</li><li>! ：非。对一个布尔值进行取反。特点: 真变假, 假变真。</li></ul><h2 id="_5-赋值运算符" tabindex="-1">5.赋值运算符 <a class="header-anchor" href="#_5-赋值运算符" aria-label="Permalink to &quot;5.赋值运算符&quot;">​</a></h2><ul><li><code>=</code> 直接赋值。比如 <code>var a = 5</code>。意思是，把 5 这个值，往 a 里面存一份。简称：把 5 赋值给 a。</li><li><code>+=</code>：比如 a += 5 等价于 a = a + 5。</li><li><code>-=</code>：比如 a -= 5 等价于 a = a - 5。</li><li><code>*=</code>：比如 a _ = 5 等价于 a = a -5。</li><li><code>/=</code>：比如 a /= 5 等价于 a = a / 5。</li><li><code>%=</code>：比如 a %= 5 等价于 a = a % 5。</li></ul><h2 id="_6-关于-与" tabindex="-1">6.关于 == 与=== <a class="header-anchor" href="#_6-关于-与" aria-label="Permalink to &quot;6.关于 == 与===&quot;">​</a></h2><h4 id="区别" tabindex="-1">区别 <a class="header-anchor" href="#区别" aria-label="Permalink to &quot;区别&quot;">​</a></h4><p>需要注意的是 <code>==</code> 和 <code>===</code> 的区别。</p><ul><li><code>==</code> 比较的时候<strong>只判断值</strong>，因为会进行隐式转换。值相等则返回 <code>true</code></li><li><code>===</code> 比较判断的时同时需要<strong>值相等</strong>和<strong>类型相同</strong>，两者均满足则返回 <code>true</code></li></ul><h2 id="_7-三目运算符" tabindex="-1">7.三目运算符 <a class="header-anchor" href="#_7-三目运算符" aria-label="Permalink to &quot;7.三目运算符&quot;">​</a></h2><p>三目运算符也叫三元运算符、条件运算符。<br>语法：<br>条件表达式 ? 语句1 : 语句2;<br><strong>执行流程</strong>——条件运算符在执行时，首先对条件表达式进行求值：</p><ul><li>如果该值为 true，则执行语句 1，并返回执行结果</li><li>如果该值为 false，则执行语句 2，并返回执行结果</li></ul>`,18),r=[s];function n(d,i,c,h,p,_){return t(),e("div",null,r)}const m=a(o,[["render",n]]);export{b as __pageData,m as default};
