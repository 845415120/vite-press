import{_ as l,o as i,c as a,U as t}from"./chunks/framework.2333ef68.js";const u=JSON.parse('{"title":"前端性能优化","description":"","frontmatter":{},"headers":[],"relativePath":"面试之路/前端性能优化.md","filePath":"面试之路/前端性能优化.md"}'),e={name:"面试之路/前端性能优化.md"},o=t('<h1 id="前端性能优化" tabindex="-1">前端性能优化 <a class="header-anchor" href="#前端性能优化" aria-label="Permalink to &quot;前端性能优化&quot;">​</a></h1><p><a href="https://www.bilibili.com/list/watchlater?bvid=BV1Xy4y1f7gv&amp;oid=779420753" target="_blank" rel="noreferrer">https://www.bilibili.com/list/watchlater?bvid=BV1Xy4y1f7gv&amp;oid=779420753</a></p><ol><li>网络请求优化。</li><li>首屏加载优化。</li><li>渲染过程优化。</li><li>计算/逻辑运行提速。</li></ol><p>在前端性能优化实践中，网络请求优化和首屏加载优化方案使用频率最高</p><h3 id="_1-网络请求优化" tabindex="-1">1. 网络请求优化 <a class="header-anchor" href="#_1-网络请求优化" aria-label="Permalink to &quot;1. 网络请求优化&quot;">​</a></h3><p>网络请求优化的目标在于减少网络资源的请求和加载耗时</p><ol><li>请求链路：DNS 查询、部署 CDN 节点、缓存等。 <ol><li>对于请求链路，核心的方案常常包括使用缓存，比如 DNS 缓存、CDN 缓存、HTTP 缓存、后台缓存等等</li><li>对多个请求进行合并，减少通信次数</li><li>对请求进行域名拆分，提升并发请求数量</li></ol></li><li>数据大小：代码大小、图片资源等。 <ol><li>数据大小则主要考对请求资源进行合理的拆分（CSS、Javascript 脚本、图片/音频/视频等）和压缩，减少请求资源的体积</li><li>在请求资源返回后，浏览器会进行解析和加载，这个过程会影响页面的可见时间，通过对<strong>首屏加载</strong>的优化，可有效地提升用户体验。</li></ol></li></ol><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h3><ol start="2"><li><p>首屏加载优化 首屏加载优化核心点在于两部分：</p></li><li><p>将页面内容尽快地展示给用户，减少页面白屏时间。</p></li><li><p>将用户可操作的时间尽量提前，避免用户无法操作的卡顿体验。</p><ol><li>考虑使用一些过渡的动画，让用户感知到页面正在顺利加载，从而避免用户对于白屏页面或是静止页面产生烦躁和困惑</li></ol></li></ol><p><strong>尽可能提前页面可见</strong>，以及将用户可交互的时间提前。一般来说，我们需要尽可能地降低首屏需要的代码量和执行耗时，可以通过以下方式进行：</p><ul><li>对页面的内容进行分片/分屏加载</li><li>仅加载需要的资源，通过异步或是懒加载的方式加载剩余资源</li><li>使用骨架屏进行预渲染</li><li>使用差异化服务，比如读写分离，对于不同场景按需加载所需要的模块</li><li>使用服务端直出渲染，减少页面二次请求和渲染的耗时</li></ul><p>在客户端进行展示，此时可充分利用客户端的优势：</p><ul><li>配合客户端进行资源预请求和预加载，比如使用预热 Web 容器</li><li>配合客户端将资源和数据进行离线，可用于下一次页面的快速渲染</li><li>使用秒看技术，通过生成预览图片的方式提前将页面内容提供给用户</li></ul><h3 id="-1" tabindex="-1"><a class="header-anchor" href="#-1" aria-label="Permalink to &quot;&quot;">​</a></h3>',14),r=[o];function s(n,_,c,p,h,d){return i(),a("div",null,r)}const b=l(e,[["render",s]]);export{u as __pageData,b as default};
